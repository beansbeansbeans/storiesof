@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

@mixin calc($property, $value, $fallback: false) {
  @if $fallback {
    #{$property}: #{$fallback};
  }
  #{$property}: -webkit-calc(#{$value});
  #{$property}: calc(#{$value});
}

@mixin responsive-grid-width($absolute, $default-width: $default-width) {
  @include bigger-than-mobile {
    width: $default-width;
    min-width: $default-min-width;
  }
  @if $absolute == true {
    left: 50%;
    @include bigger-than-mobile {
      margin-left: -$default-width / 2;
    }
  } @else {
    margin-left: auto;
    margin-right: auto;
  }
}

@mixin sub-width($count, $margin, $selector) {
  #{$selector} {
    width: calc((100% - ((#{$count} - 1) * #{$margin})) / #{$count});
    &:not(:last-of-type) {
      margin-right: $margin;
    }
  }
}

@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  width: 0;
  height: 0;
  content: '';
  z-index: 2;
  border-#{opposite-position($direction)}: ($size * 1.5) solid $color;
  
  $perpendicular-borders: $size solid transparent;
  
  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-borders;
    border-right:  $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top:    $perpendicular-borders;
  }
}